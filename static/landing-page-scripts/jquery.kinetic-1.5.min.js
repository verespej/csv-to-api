/*!
jQuery.kinetic v1.5
Dave Taylor http://the-taylors.org/jquery.kinetic

The MIT License (MIT)
Copyright (c) <2011> <Dave Taylor http://the-taylors.org>
*/
(function (a) { "use strict"; var b = { decelerate: true, triggerHardware: false, y: true, x: true, slowdown: .9, maxvelocity: 40, throttleFPS: 60, movingClass: { up: "kinetic-moving-up", down: "kinetic-moving-down", left: "kinetic-moving-left", right: "kinetic-moving-right" }, deceleratingClass: { up: "kinetic-decelerating-up", down: "kinetic-decelerating-down", left: "kinetic-decelerating-left", right: "kinetic-decelerating-right"} }, c = "kinetic-settings", d = "kinetic-active"; if (!window.requestAnimationFrame) { window.requestAnimationFrame = function () { return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (a, b) { window.setTimeout(a, 1e3 / 60) } } () } a.support = a.support || {}; a.extend(a.support, { touch: "ontouchend" in document }); var e = function () { return false }; var f = function (a, b) { return Math.floor(Math.abs(a)) === 0 ? 0 : a * b }; var g = function (a, b) { var c = a; if (a > 0) { if (a > b) { c = b } } else { if (a < 0 - b) { c = 0 - b } } return c }; var h = function (a, b) { this.removeClass(a.movingClass.up).removeClass(a.movingClass.down).removeClass(a.movingClass.left).removeClass(a.movingClass.right).removeClass(a.deceleratingClass.up).removeClass(a.deceleratingClass.down).removeClass(a.deceleratingClass.left).removeClass(a.deceleratingClass.right); if (a.velocity > 0) { this.addClass(b.right) } if (a.velocity < 0) { this.addClass(b.left) } if (a.velocityY > 0) { this.addClass(b.down) } if (a.velocityY < 0) { this.addClass(b.up) } }; var i = function (a, b) { if (typeof b.stopped === "function") { b.stopped.call(a, b) } }; var j = function (a, b) { var c = a[0]; if (b.x && c.scrollWidth > 0) { c.scrollLeft = b.scrollLeft = c.scrollLeft + b.velocity; if (Math.abs(b.velocity) > 0) { b.velocity = b.decelerate ? f(b.velocity, b.slowdown) : b.velocity } } else { b.velocity = 0 } if (b.y && c.scrollHeight > 0) { c.scrollTop = b.scrollTop = c.scrollTop + b.velocityY; if (Math.abs(b.velocityY) > 0) { b.velocityY = b.decelerate ? f(b.velocityY, b.slowdown) : b.velocityY } } else { b.velocityY = 0 } h.call(a, b, b.deceleratingClass); if (typeof b.moved === "function") { b.moved.call(a, b) } if (Math.abs(b.velocity) > 0 || Math.abs(b.velocityY) > 0) { window.requestAnimationFrame(function () { j(a, b) }) } else { i(a, b) } }; var k = function (b, d) { var e = a.kinetic.callMethods[b], f = Array.prototype.slice.call(arguments); if (e) { this.each(function () { var b = f.slice(1), d = a(this).data(c); b.unshift(d); e.apply(this, b) }) } }; var l = function (b, c) { var d = b[0]; if (a.support.touch) { d.addEventListener("touchstart", c.events.touchStart, false); d.addEventListener("touchend", c.events.inputEnd, false); d.addEventListener("touchmove", c.events.touchMove, false) } else { b.mousedown(c.events.inputDown).mouseup(c.events.inputEnd).mousemove(c.events.inputMove) } b.click(c.events.inputClick).bind("selectstart", e); b.bind("dragstart", c.events.dragStart) }; var m = function (b, c) { var d = b[0]; if (a.support.touch) { d.removeEventListener("touchstart", c.events.touchStart, false); d.removeEventListener("touchend", c.events.inputEnd, false); d.removeEventListener("touchmove", c.events.touchMove, false) } else { b.unbind("mousedown", c.events.inputDown).unbind("mouseup", c.events.inputEnd).unbind("mousemove", c.events.inputMove) } b.unbind("click", c.events.inputClick).unbind("selectstart", e); b.unbind("dragstart", c.events.dragStart) }; var n = function (e) { this.addClass(d).each(function () { var d = a.extend({}, b, e); var f = this, i = a(this), k, m = false, n, o = false, p = false, q, r, s = 1e3 / d.throttleFPS, t, u; d.velocity = 0; d.velocityY = 0; var v = function () { k = false; n = false; p = false }; a(document).mouseup(v).click(v); var w = function () { d.velocity = g(m - k, d.maxvelocity); d.velocityY = g(o - n, d.maxvelocity) }; var x = function (b) { if (a.isFunction(d.filterTarget)) { return d.filterTarget.call(f, b) !== false } return true }; var y = function (a, b) { p = true; d.velocity = m = 0; d.velocityY = o = 0; k = a; n = b }; var z = function () { if (k && m && d.decelerate === false) { d.decelerate = true; w(); k = m = p = false; j(i, d) } }; var A = function (b, c) { if (!t || new Date > new Date(t.getTime() + s)) { t = new Date; if (p && (k || n)) { if (u) { a(u).blur(); u = null; i.focus() } d.decelerate = false; d.velocity = d.velocityY = 0; i[0].scrollLeft = d.scrollLeft = d.x ? i[0].scrollLeft - (b - k) : i[0].scrollLeft; i[0].scrollTop = d.scrollTop = d.y ? i[0].scrollTop - (c - n) : i[0].scrollTop; m = k; o = n; k = b; n = c; w(); h.call(i, d, d.movingClass); if (typeof d.moved === "function") { d.moved.call(i, d) } } } }; d.events = { touchStart: function (a) { if (x(a.target)) { y(a.touches[0].clientX, a.touches[0].clientY); a.stopPropagation() } }, touchMove: function (a) { if (p) { A(a.touches[0].clientX, a.touches[0].clientY); if (a.preventDefault) { a.preventDefault() } } }, inputDown: function (a) { if (x(a.target)) { y(a.clientX, a.clientY); u = a.target; if (a.target.nodeName === "IMG") { a.preventDefault() } a.stopPropagation() } }, inputEnd: function (a) { z(); u = null; if (a.preventDefault) { a.preventDefault() } }, inputMove: function (a) { if (p) { A(a.clientX, a.clientY); if (a.preventDefault) { a.preventDefault() } } }, inputClick: function (a) { if (Math.abs(d.velocity) > 0) { a.preventDefault(); return false } }, dragStart: function (a) { if (u) { return false } } }; l(i, d); i.data(c, d).css("cursor", "move"); if (d.triggerHardware) { i.css("-webkit-transform", "translate3d(0,0,0)") } }) }; a.kinetic = { settingsKey: c, callMethods: { start: function (b, c) { var d = a(this); b = a.extend(b, c); if (b) { b.decelerate = false; j(d, b) } }, end: function (b, c) { var d = a(this); if (b) { b.decelerate = true } }, stop: function (a, b) { a.velocity = 0; a.velocityY = 0; a.decelerate = true }, detach: function (b, c) { var e = a(this); m(e, b); e.removeClass(d).css("cursor", "") }, attach: function (b, c) { var e = a(this); l(e, b); e.addClass(d).css("cursor", "move") } } }; a.fn.kinetic = function (a) { if (typeof a === "string") { k.apply(this, arguments) } else { n.call(this, a) } return this } })(window.jQuery || window.Zepto);